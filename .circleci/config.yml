# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
general:
  branches:
    only:
     - master
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    
    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Keyscan Github (HACK)
          command: ssh-keyscan -H medserve.online >> ~/.ssh/known_hosts
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
          
      - setup_remote_docker

      - run: mkdir -p $HOME/terminology 
      - run: mvn -s settings.xml -B clean deploy -P '!docker' -Dsynd.cache.dir=$HOME/terminology 
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run: |
          cd server
          docker-compose build
          docker-compose push
      - run: scp server/docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:~
      - run: ssh $DEPLOY_USER@$DEPLOY_HOST 'mkdir -pv fhir-server medserve-proxy'
      - run: printf "MEDSERVE_SENTRY_DSN=$MEDSERVE_SENTRY_DSN\nPOLECAT_SENTRY_DSN=$POLECAT_SENTRY_DSN\nMEDSERVE_FHIR_BASE=$MEDSERVE_FHIR_BASE\nPOLECAT_GOOGLE_ANALYTICS_TRACKING_ID=$POLECAT_GOOGLE_ANALYTICS_TRACKING_ID\n" > .env
      - run: scp .env $DEPLOY_USER@$DEPLOY_HOST:~
      - run: ssh $DEPLOY_USER@$DEPLOY_HOST 'docker-compose pull medserve proxy; docker-compose create medserve proxy; docker-compose up -d'

      - save_cache:
          paths:
            - ~/.m2
            - $HOME/terminology
          key: v1-dependencies-{{ checksum "pom.xml" }}

