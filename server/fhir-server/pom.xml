<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>online.medserve.server</groupId>
		<artifactId>server-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>fhir-server</artifactId>
	<packaging>war</packaging>

	<name>FHIR Server</name>

	<properties>
		<synd.client.id>${env.SYND_CLIENT_ID}</synd.client.id>
		<synd.client.secret>${env.SYND_CLIENT_SECRET}</synd.client.secret>
		<synd.cache.dir>${env.SYND_CACHE_DIR}</synd.cache.dir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>online.medserve</groupId>
			<artifactId>medserve-fhir-extensions</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- HAPI-FHIR uses Logback for logging support. The logback library is 
			included automatically by Maven as a part of the hapi-fhir-base dependency, 
			but you also need to include a logging library. Logback is used here, but 
			log4j would also be fine. -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>

		<!-- If you are using HAPI narrative generation, you will need to include 
			Thymeleaf as well. Otherwise the following can be omitted. -->
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>3.0.2.RELEASE</version>
		</dependency>

		<!-- You may not need this if you are deploying to an application server 
			which provides database connection pools itself. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>2.1.1</version>
		</dependency>

		<!-- Required to enable the CORS interceptor within HAPI, see: http://hapifhir.io/doc_cors.html -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>4.3.9.RELEASE</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry</artifactId>
			<version>1.6.4</version>
		</dependency>
		<dependency>
			<groupId>io.sentry</groupId>
			<artifactId>sentry-logback</artifactId>
			<version>1.1.0</version>
		</dependency>
	</dependencies>

	<build>

		<!-- Tells Maven to name the generated WAR file as med-fhir-server.war -->
		<finalName>med-fhir-server</finalName>

		<plugins>
			<plugin>
				<groupId>online.medserve.server</groupId>
				<artifactId>index-builder</artifactId>
				<version>${project.version}</version>
				<configuration>
					<syndCacheDirectory>${synd.cache.dir}</syndCacheDirectory>
					<clientId>${synd.client.id}</clientId>
					<clientSecret>${synd.client.secret}</clientSecret>
				</configuration>
				<executions>
					<execution>
						<id>build index</id>
						<goals>
							<goal>amt-index-builder</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>

				<executions>
					<execution>
						<phase>install</phase>
						<id>build docker image</id>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<phase>deploy</phase>
						<id>push docker image</id>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<useMavenSettingsForAuth>true</useMavenSettingsForAuth>
					<repository>dionmcm/medserve</repository>
					<tag>${dockerTag}</tag>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
